import {
  base32_exports,
  bigintToUint8Array,
  leb128_exports,
  toBigInt
} from "./chunk-2OQ72TZG.mjs";
import {
  __export
} from "./chunk-7P6ASYW6.mjs";

// src/utils/cbor.ts
var cbor_exports = {};
__export(cbor_exports, {
  decode: () => decode,
  encode: () => encode
});
import { decode as decodeCbor, encode as encodeCbor } from "cborg";
import { fromString } from "uint8arrays/from-string";
function decode(data) {
  if (typeof data === "string") {
    if (data.startsWith("0x")) {
      const hex = data.slice(2);
      data = fromString(hex, "hex");
    } else {
      data = fromString(data, "hex");
    }
  }
  return decodeCbor(data);
}
function encode(data) {
  return encodeCbor(data);
}
export {
  base32_exports as base32,
  bigintToUint8Array,
  cbor_exports as cbor,
  leb128_exports as leb128,
  toBigInt
};
